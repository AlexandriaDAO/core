type BalanceResult = record { icp : float64; alex : float64; lbry : float64 };
type Result = variant { Ok : text; Err : text };
type TestAccounts = record {
  one : text;
  two : text;
  three : text;
  root : text;
};
service : {
  burn : (nat64, text) -> (Result);
  check_balances : (vec text) -> (vec BalanceResult);
  check_swap_canister_balance : () -> (float64);
  claim_icp_reward : (text) -> (Result);
  get_test_accounts : () -> (TestAccounts) query;
  stake : (nat64, text) -> (Result);
  swap : (nat64, text) -> (Result);
  unstake : (text) -> (Result);
}
