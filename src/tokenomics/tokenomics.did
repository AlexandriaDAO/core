type Logs = record { log : text; time : nat64 };
type RejectionCode = variant {
  NoError;
  CanisterError;
  SysTransient;
  DestinationInvalid;
  Unknown;
  SysFatal;
  CanisterReject;
};
type Result = variant { Ok : nat64; Err : text };
type Result_1 = variant {
  Ok : record { record { principal; blob }; record { principal; blob } };
  Err : record { RejectionCode; text };
};
type Result_2 = variant { Ok : text; Err : text };
service : {
  fetch_total_minted_ALEX : () -> (Result);
  get_current_ALEX_rate : () -> (nat64) query;
  get_current_LBRY_threshold : () -> (nat64) query;
  get_current_threshold_index : () -> (nat32) query;
  get_logs : () -> (vec Logs) query;
  get_max_stats : () -> (nat64, nat64) query;
  get_total_LBRY_burn : () -> (nat64) query;
  get_two_random_nfts : () -> (Result_1);
  mint_ALEX : (nat64, principal, opt blob) -> (Result_2);
  your_principal : () -> (Result_2) query;
}
