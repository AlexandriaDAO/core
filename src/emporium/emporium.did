type Listing = record {
  page_size : nat64;
  nfts : vec record { text; Nft };
  total_pages : nat64;
  current_page : nat64;
};
type LogAction = variant {
  Listed : record { price : nat64 };
  Sold : record { price : nat64 };
  PriceUpdate : record { new_price : nat64; old_price : nat64 };
  Removed;
  ReimbursedToBuyer;
};
type LogEntry = record {
  action : LogAction;
  token_id : nat;
  seller : principal;
  timestamp : nat64;
  buyer : principal;
};
type Logs = record {
  page_size : nat64;
  logs : vec record { nat64; LogEntry };
  total_pages : nat64;
  current_page : nat64;
};
type Nft = record {
  status : NftStatus;
  token_id : nat;
  owner : principal;
  time : nat64;
  price : nat64;
};
type NftStatus = variant { Listed; Reimbursed };
type Result = variant { Ok : text; Err : text };
service : {
  buy_nft : (nat) -> (Result);
  get_caller_listing : (opt nat64, opt nat64) -> (Listing) query;
  get_caller_logs : (opt nat64, opt nat64, opt nat) -> (Logs) query;
  get_listing : (opt nat64, opt nat64) -> (Listing) query;
  get_listing_total_count : () -> (nat64) query;
  get_logs : (opt nat64, opt nat64, opt nat) -> (Logs) query;
  get_search_listing : (
      opt nat64,
      opt nat64,
      opt text,
      opt nat,
      opt principal,
      text,
    ) -> (Listing) query;
  list_nft : (nat, nat64) -> (Result);
  remove_nft_listing : (nat) -> (Result);
  update_nft_price : (nat, nat64) -> (Result);
}
