type Block = record { id : nat; block : opt BlockVariant };
type BlockVariant = variant { Map : vec MapEntry };
type DynamicValue = variant {
  Map : Vec;
  Nat : nat;
  Blob : blob;
  Null;
  Text : text;
  Array : vec DynamicValue;
};
type MapEntry = record { key : text; value : DynamicValue };
type Nft = record {
  status : text;
  token_id : nat64;
  owner : principal;
  price : nat64;
};
type Result = variant { Ok : text; Err : text };
type Result_1 = variant { Ok : vec Block; Err : text };
type Vec = vec record {
  key : text;
  value : variant {
    Map : Vec;
    Nat : nat;
    Blob : blob;
    Null;
    Text : text;
    Array : vec DynamicValue;
  };
};
service : {
  cancel_nft_listing : (nat64) -> (Result);
  get_listing : () -> (vec record { nat64; Nft }) query;
  icrc3_get_blocks : (nat, nat) -> (Result_1);
  list_nft : (nat64, nat64) -> (Result);
}
